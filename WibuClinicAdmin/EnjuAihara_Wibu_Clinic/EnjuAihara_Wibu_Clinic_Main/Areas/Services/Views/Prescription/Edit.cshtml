@model EnjuAihara.EntityFramework.DescriptionModel
@{
	var PatientType = (bool)ViewBag.PatientType;
	var Birthday = Model.AccountModel.UsersModel.Birthday == null ? "" : ((DateTime)Model.AccountModel.UsersModel.Birthday).ToString("yyyy-MM-dd");
}
<div class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1 class="m-0">Sửa toa thuốc</h1>
			</div>
			<div class="col-sm-6 text-right">
				<div class="pull-right">
					<a class="btn btn-info" href="/Services/Prescription"><i class="fa-solid fa-arrow-rotate-left"></i>Quay lại</a>
					<button class="btn btn-primary" id="btn-edit" style="width:20%">
						<i class="fa-solid fa-pen-to-square"></i>
						Lưu
					</button>

				</div>

			</div>
		</div>
	</div>
</div>
<form id="frmCreate" enctype='multipart/form-data'>
	<div class="row">
		<div class="col-md-12">
			<div class="card h-100">
				<div class="card-header">
					<div class="row">
						<div class="col-md-6">
							<label class="col-form-label">Thông tin bệnh nhân</label>
						</div>
						<div class="col-md-6 text-right">
							<label class="col-form-label">Bệnh nhân vãng lai</label>
							@*<input type="checkbox" id="PatientType" name="PatientType">*@
							@if (PatientType == true)
							{
								@Html.CheckBox("PatientType", true, new { @disabled = "disabled" })
							}
							else
							{
								@Html.CheckBox("PatientType", new { @disabled = "disabled" })
							}
						</div>

					</div>

				</div>

				<div class="card-body">
					<div class="row">
						<div class="col-md-3">
							<div class="row g-3 align-items-center">
								<div class="col-md-3 text-center">
									<label for="PatientName" class="col-form-label">Họ bệnh nhân</label>
								</div>
								<div class="col-md-8">
									@*<input type = "text" id="PatientLastName" name="PatientLastName" class="form-control" readonly>*@
									@if (PatientType == true)
									{
										@Html.TextBoxFor(x => x.AnonymousClient, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })
									}
									else
									{
										@Html.TextBoxFor(x => x.AccountModel.UsersModel.LastName, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })
									}
								</div>
							</div>
						</div>
						<div class="col-md-3">
							<div class="row g-3 align-items-center">
								<div class="col-md-3 text-center">
									<label for="PatientFirstName" class="col-form-label">Tên bệnh nhân</label>
								</div>
								<div class="col-md-8">
									@*<input type = "text" id="PatientFirstName" name="PatientFirstName" class="form-control" readonly>*@
									@if (PatientType == true)
									{
										@Html.TextBoxFor(x => x.AnonymousClient, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })
									}
									else
									{
										@Html.TextBoxFor(x => x.AccountModel.UsersModel.FirstName, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })
									}
								</div>
							</div>
						</div>
						<div class="col-md-3">
							<div class="row g-3 align-items-center">
								<div class="col-md-4 text-center">
									<label for="PatientPhone" class="col-form-label">Điện thoại</label>
								</div>
								<div class="col-md-8">
									@*<input type = "text" id="PatientPhone" name="PatientPhone" class="form-control" readonly>*@
									@if (PatientType == true)
									{
										@Html.TextBoxFor(x => x.AnonymousPhone, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })
									}
									else
									{
										@Html.TextBoxFor(x => x.AccountModel.UsersModel.Phone, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })
									}
								</div>
							</div>
						</div>
						<div class="col-md-3">
							<div class="row g-3 align-items-center">
								<div class="col-md-4 text-center">
									<label for="PatientBirthday" class="col-form-label">Ngày sinh</label>
								</div>
								<div class="col-md-8">
									@if (PatientType == true)
									{
										<input type="date" id="PatientBirthday" name="PatientBirthday" class="form-control" readonly disabled>
									}
									else
									{
										@Html.TextBoxFor(x => x.AccountModel.UsersModel.Birthday, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled", Value = Birthday })
									}
								</div>
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							<div class="row g-3 align-items-center">
								<div class="col-md-3 text-center">
									<label for="PatientAddress" class="col-form-label">Địa chỉ</label>
								</div>
								<div class="col-md-8">
									@*<input type = "text" id="PatientAddress" name="PatientAddress" class="form-control" readonly>*@
									@if (PatientType == true)
									{
										<input type="text" id="PatientAddress" name="PatientAddress" class="form-control" readonly disabled>
									}
									else
									{
										@Html.TextBoxFor(x => x.AccountModel.UsersModel.Address, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })
									}
								</div>
							</div>
						</div>
						<div class="col-md-6">
							<div class="row g-3 align-items-center">
								<div class="col-md-3 text-center">
									<label for="Email" class="col-form-label">Email</label>
								</div>
								<div class="col-md-8">
									@if (PatientType == true)
									{
										<input type="email" id="Email" name="Email" class="form-control" readonly disabled>
									}
									else
									{
										@Html.TextBoxFor(x => x.AccountModel.UsersModel.Email, new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })
									}
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="row mt-3">
		<div class="col-md-12">
			<div class="card">
				<div class="card-header">
					<label class="col-form-label">Kết luận của bác sĩ @Model.AccountModel1.UsersModel.LastName @Model.AccountModel1.UsersModel.FirstName </label>
				</div>
				<div class="card-body">
					<div class="row">
						<div class="col-md-12">
							<div class="row g-3 align-items-center">
								<div class="col-md-2 text-center">
									<label for="IllnessLst" class="col-form-label">Các bệnh gặp phải</label>
								</div>
								<div class="col-md-10">
									<select type="text" id="IllnessLst" name="IllnessLst" class="form-control" multiple>
										@foreach (var i in Model.DescriptionIllnessModels.Select(x => new { text = x.IllnessModel.IllnessName, value = x.IllnessId }).ToList())
										{
											<option selected value="@i.value">@i.text</option>
										}
									</select>
								</div>
							</div>
						</div>
						<div class="col-md-12 mt-3">
							<div class="row g-3 align-items-center">
								<div class="col-md-2 text-center">
									<label for="Note" class="col-form-label">Kết luận</label>
								</div>
								<div class="col-md-10">
									<textarea id="Note" name="Note" style="width: 100%" class="form-control"></textarea>
								</div>
							</div>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-md-12">
			<div class="card">
				<div class="card-header">
					<div class="row">
						<div class="col-md-4">
							<label class="col-form-label">Danh sách thuốc và cách sử dụng</label>
						</div>
						<div class="col-md-4">
							<div class="row g-3 align-items-center">
								<div class="col-md-4 text-left">
									<label for="DayOfMedicine" class="col-form-label">Số ngày thuốc (/Ngày)</label>
								</div>
								<div class="col-md-3">
									<input type="number" id="DayOfMedicine" name="DayOfMedicine" class="form-control" />
								</div>
							</div>
						</div>
						<div class="col-md-4 text-right">
							<button type="button" class="btn btn-danger" id="DeleteAllMed">Xóa hết</button>
						</div>
					</div>
				</div>
				<div class="card-body" id="MediSearching">
					<div class="row">
						<div class="col-md-5">
							<div class="row g-3 align-items-center">
								<div class="col-md-2 text-right">
									<label for="ProList" class="col-form-label">Nhà cung cấp</label>
								</div>
								<div class="col-md-10">
									<input id="ProList" name="ProList" class="form-control" />
								</div>
							</div>
						</div>
						<div class="col-md-5">
							<div class="row g-3 align-items-center">
								<div class="col-md-2 text-right">
									<label for="MedList" class="col-form-label">Thuốc</label>
								</div>
								<div class="col-md-10">
									<input id="MedList" name="MedList" class="form-control" />
								</div>
							</div>
						</div>
						<div class="col-md-2">
							<button type="button" class="btn btn-primary" id="SearchMedi"><i class="fas fa-search"></i>Tìm kiếm</button>
						</div>
					</div>
					<div class="row mt-3">
						<div id="divSearchResult">
							@Html.Partial("_PaggingServerSideMedicine")
						</div>
					</div>
					<hr />
					<div class="row">
						<table class="table table-bordered table-striped table-hover dataTableServerSide no-footer" id="DanhMuchKeToa" style="width:100%">
							<thead class="table-header">
								<tr>
									<th class="text-center">STT</th>
									<th class="text-center">Tên thuốc</th>
									<th class="text-center">Nhà cung cấp</th>
									<th class="text-center">Số lượng</th>
									<th class="text-center">Đơn vị tính</th>
									<th class="text-center">Giá tiền</th>
									<th class="text-center">Tổng cộng</th>
									<th class="text-center">Ghi chú cách sử dụng của bác sĩ</th>
									<th class="text-center">Hành động</th>
								</tr>
							</thead>
							<tbody>

							</tbody>
						</table>
					</div>

				</div>
			</div>
		</div>
	</div>
</form>
<script type="text/javascript">
	$(document).ready(function () {
		CloseSideBar();
		PreventEnterButton();


		Select2_MultipleAutoComplete("/Services/Prescription/IllnessSearch", "#IllnessLst");

		JqueryAutoComplete("/MasterData/Medicine/JqueryAutoCompleteMediName", "#MedList");
		JqueryAutoComplete("/Services/Prescription/AutoCompleteProvider", "#ProList");



		//Danh Sách thuốc tìm kiếm
		var columns = [
			{
				"data": "STT",
				"className": "text-center",
				"orderable": true,
			},
			{
				"data": "MedName",
				"className": "text-center",
				"orderable": true,
			},
			{
				"data": "ProName",
				"className": "text-center",
				"orderable": true,
			},
			{
				"data": "Unit",
				"className": "text-center",
				"orderable": true,
			},
			{
				"data": "SoLuongTon",
				"className": "text-center",
				"orderable": true,
				"render": function (data, type, row) {
					if (data != "" && data != null) {
						return NumberFormat(data);
					}
					return "0";
				}
			},
			{
				"data": "Price",
				"className": "text-center",
				"orderable": true,
				"render": function (data, type, row) {
					if (data != "" && data != null) {
						return CurrencyFormat(data);
					}
					return "đ0";
				}
			},
			{
				"data": "Status",
				"className": "text-center",
				"orderable": true,
			},
			{
				"data": "WarehouseId",
				"className": "text-center",
				"orderable": false,
				"render": function (data, type, row) {
					if (data != "" && data != null) {
						var s = '<input type="number" min="1" max="' + row.SoLuongTon + '" id="number-' + data + '" class="form-control"/>';
						return s;
					}
					return '';
				}
			},
			{
				"data": "WarehouseId",
				"className": "text-center",
				"orderable": false,
				"render": function (data, type, row) {
					if (data != "" && data != null) {
						var s = '<button id="' + data + '" class="btn btn-info add-to-prescription"><i class="fa fa-plus-square"></i>Thêm vào toa thuốc</button>';
						return s;
					}
					var s = '<button class="btn btn-warning">Yêu cầu nhập kho</button>'
					return s;
				}
			}
		];
		$("#SearchMedi").on('click', function () {
			PaggingServerSideCustom("Services/Prescription/_PaggingServerSideMedicine", columns);
		});
		/*$("#SearchMedi").trigger("click");*/
		$(document).on("click", ".add-to-prescription", function (e) {
			e.preventDefault();
			let obj = {
				index: 0
			};
			if (LoopThrough(obj, $(this).attr('id'))) {
				var id = $(this).attr('id');
				var quantityId = "#number-" + id;
				AddToPrescription($(this).attr('id'), $(quantityId).val(), obj.index);
			}
			else
				AlertPopup(3, "Lỗi", "Vui Lòng không chọn thuốc đã có trong danh sách");
		});

		$(document).on("click", ".delete-Medi", function (e) {
			e.preventDefault();
			$(this).parent().parent().remove();
			let obj = {
				index: 0
			};
			LoopThrough(obj, "000000000000000");
		});


		$("#FastSearch").on('change', function () {
			ShowClientInfo($(this).val());
		});


		$("#DeleteAllMed").on('click', function () {
			$("#DanhMuchKeToa > tbody").empty();
		});


	});
</script>